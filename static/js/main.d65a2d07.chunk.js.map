{"version":3,"sources":["services/DataService.tsx","pages/components/CompanyItem.tsx","pages/components/LoadingComponent.tsx","pages/components/CompaniesListing.tsx","services/QueryHelper.tsx","services/ErrorHandler.tsx","pages/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getUrl","route","getAsync","a","url","fetch","response","ok","Error","json","data","getSign","number","CompanyItem","props","company","isOpenChanged","useState","isOpen","setIsOpen","isOpenRef","useRef","useEffect","key","companyKey","collapsableDivId","className","style","margin","current","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","onClick","x","src","alt","width","height","marginRight","name","id","padding","scope","fuels","map","f","i","price","toFixed","change","Math","abs","LoadingComponent","role","loadingText","CompaniesListing","companies","setCompanies","history","useHistory","queryDataRef","cmp","URLSearchParams","window","location","search","get","openedCompanyKeys","Boolean","split","getQueryData","queryData","setQeuryData","lastSetUrlRef","newUrl","searchParams","set","join","toString","getFreshUrl","alert","push","error","isCompanyOpenChanged","Array","from","Set","filter","c","some","HomePage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d65a2d07.chunk.js","sourcesContent":["import Company from \"../models/Company\";\n\nconst baseUrl = \"https://raw.githubusercontent.com/mister-giga/Fuel-Georgia/main\";\nconst getUrl = (route:string):string => `${baseUrl}/${route}`;\n\nexport function GetCompanyLogoUrl(companyKey:string){\n    return getUrl(`blob/${companyKey}.png`);\n}\n\nasync function getAsync<T> (route:string):Promise<T> {\n    const url = getUrl(route);\n    const response = await fetch(url);\n    if(!response.ok){\n        throw new Error('მოხდა შეცდომა');\n    }\n    const data = await response.json();\n    return data;\n}\n\nexport function GetCompaniesAsync() {\n    return getAsync<Company[]>(\"data/companies.json\");\n}\n\nexport function GetLocationsAsync(companyKey:string){\n    return getAsync<Location[]>(`data/${companyKey}/locations.json`);\n}\n\nexport function GetPriceChangesAsync(companyKey:string, fuelKey:string){\n    return getAsync<Location[]>(`data/${companyKey}/priceChanges/${fuelKey}.json`);\n}","import React, { useEffect, useRef, useState } from 'react'\nimport Company from '../../models/Company';\nimport { GetCompanyLogoUrl } from '../../services/DataService';\n\nfunction getSign(number:number){\n    if(number>0)\n        return '+';\n    if(number<0)\n        return '-';\n    return '';\n}\nfunction getBadgeClass(number:number){\n    if(number>0)\n        return 'bg-danger';\n    if(number<0)\n        return 'bg-success';\n    return 'bg-secondary';\n}\n\nexport default function CompanyItem(props:{company:Company, isOpen:boolean, isOpenChanged:(companyKey:string, isOpen:boolean) => void}){\n    const { company, isOpenChanged } = props;\n\n    const [isOpen, setIsOpen] = useState<boolean>(props.isOpen);\n    const isOpenRef = useRef(isOpen);\n\n    useEffect(()=>{\n        isOpenChanged(company.key, isOpen);\n    }, [isOpen, isOpenChanged, company.key]);\n\n    const collapsableDivId = `collapsable_${company.key}`;\n\n    const onOpenClose = () => setIsOpen(x=>!x);\n\n    return (\n        <div className=\"accordion card mb-3\" style={{ margin:'10px' }}>\n            <div className={`accordion-item`}>\n                <h2 className=\"accordion-header\">\n                    <button className={`accordion-button ${isOpenRef.current ? '' : 'collapsed'}`} type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target={`#${collapsableDivId}`} aria-expanded=\"true\" aria-controls=\"collapseOne\" onClick={onOpenClose}>\n                        <img src={GetCompanyLogoUrl(company.key)} alt={`${company.key} logo`} width='50' height='50' style={{marginRight:'16px'}}/>\n                        <h3>{company.name}</h3>\n                    </button>\n                </h2>\n                <div id={collapsableDivId} className={`accordion-collapse collapse ${isOpenRef.current ? 'show' : ''}`}>\n                    <div className=\"accordion-body\" style={{padding:'0'}}>\n                        <table className=\"table table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">საწვავი</th>\n                                    <th scope=\"col\">ფასი</th>\n                                    <th scope=\"col\">ცვლილება</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {company.fuels.map((f,i)=> (\n                                    <tr key={f.key}>\n                                        <th scope=\"row\">{i+1}</th>\n                                        <td>{f.name}</td>\n                                        <td>{f.price.toFixed(2)}</td>\n                                        <td><span className={`badge ${getBadgeClass(f.change)}`}>{getSign(f.change)}{Math.abs(f.change).toFixed(2)}</span></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        // <div className=\"card mb-3\" style={{ margin:'10px' }}>\n        //     <h2 className=\"accordion-header\">\n        //         <button className=\"accordion-button\" type=\"button\" onClick={onOpenClose}>\n        //             <img src={GetCompanyLogoUrl(company.key)} width='50' height='50'/>\n        //             {company.name}\n        //         </button>\n        //     </h2>\n        //     <div className={`${isOpen ? '' : 'collapse'}`}>\n        //         <div className=\"accordion-body\">\n        //             <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        //         </div>\n        //     </div>\n        // </div>\n    );\n}","import React from 'react'\n\nexport default function LoadingComponent(props:{loadingText:string}){\n    return (\n        <div className=\"horizontallyCentered\">\n            <div className=\"spinner-border text-success\" role=\"status\">\n                <span className=\"visually-hidden\"></span>\n            </div>\n            <p className=\"lead\">{props.loadingText}</p>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Company from '../../models/Company';\nimport { GetCompaniesAsync } from '../../services/DataService';\nimport HandleError from '../../services/ErrorHandler';\nimport { getFreshUrl, getQueryData, QueryData } from '../../services/QueryHelper';\nimport CompanyItem from './CompanyItem';\nimport LoadingComponent from './LoadingComponent';\n\n\n\nexport default function CompaniesListing(){\n    const [companies, setCompanies] = useState<Company[]|null>(null);\n    const history = useHistory();\n  \n    const queryDataRef = useRef<QueryData>(getQueryData());\n    \n    const [queryData, setQeuryData] = useState<QueryData>(queryDataRef.current);\n    const lastSetUrlRef = useRef<string|null>(null);\n    \n    useEffect(()=> {\n        const newUrl = getFreshUrl(queryData);\n        if(lastSetUrlRef.current !== newUrl){\n            lastSetUrlRef.current = newUrl;\n            window.alert(newUrl);\n            history.push(newUrl);\n        }\n     }, [queryData,history]);\n\n    useEffect(()=>{\n        if(companies === null){\n            (async () => {\n                try {\n                    setCompanies(await GetCompaniesAsync());\n                } catch(ex){\n                    HandleError(ex);\n                }\n            })();\n        }\n    }, [companies]);\n\n    if(companies === null){\n        return <LoadingComponent loadingText=\"იტვირთება კომპანიები...\"/>;\n    }\n\n    const isCompanyOpenChanged = (companyKey:string, isOpen:boolean) => {\n        setQeuryData(x=> ({...x, openedCompanyKeys: isOpen ? Array.from(new Set([...x.openedCompanyKeys, companyKey])): x.openedCompanyKeys.filter(c=>c!== companyKey)}));\n    }\n\n    return <>\n        {companies.map(x=><CompanyItem company={x} key={x.key} isOpen={queryDataRef.current.openedCompanyKeys.some(c=>c === x.key)} isOpenChanged={isCompanyOpenChanged}/>)}\n    </>\n}","export interface QueryData {\n    openedCompanyKeys:string[]\n}\n\nexport function getQueryData(){\n    const parameters = new URLSearchParams(window.location.search);\n\n    const cmp = parameters.get('cmp');\n\n    return {\n        openedCompanyKeys: Boolean(cmp) ? cmp!.split('.') : []\n    }\n}\n\nexport function getFreshUrl(data:QueryData) {\n    var searchParams = new URLSearchParams(window.location.search);\n    searchParams.set(\"cmp\", data.openedCompanyKeys.join('.'));\n    const url = \"?\" + searchParams.toString();\n    return url;\n}","export default function HandleError(error:string){\n    window.alert(error);\n}","import React from 'react'\nimport CompaniesListing from './components/CompaniesListing'\nimport './HomePage.css'\n\nexport default function HomePage(){\n\n    return <>\n        <h1 style={{padding:'20px'}}>საწვავი საქართველოში</h1>\n        <CompaniesListing/>\n    </>\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"*\">\n          <HomePage/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}